# s0 - num of tests left to run
# s1 - address of input word
# s2 - address of expected output word
# s3 - input word
# s4 - output word
#
# is_leap_year must:
# - be named is_leap_year and declared as global
# - read input integer from a0
# - follow the convention of using the t0-9 registers for temporary storage
# - (if it wants to use s0-7 then it is responsible for pushing existing values to the stack then popping them back off before returning)
# - write boolean result to v0

.text

# on every year that is evenly divisible by 4
#  except every year that is evenly divisible by 100
#    unless the year is also evenly divisible by 400
is_leap_year:
        li      $v0, 1
        li      $t0, 100

        andi    $t1, $a0, 3
        bne     $t1, $zero, not_leap_year

        div     $a0, $t0
        mfhi    $t1 # hi = rs % rt
        mflo    $t2 # lo = rs / rt

        andi    $t2, $t2, 3
        add     $t2, $t2, $t1
        beq     $t2, $zero, leap_year
        beq     $t1, $zero, not_leap_year

leap_year:
        jr      $ra
not_leap_year:
        li      $v0, 0
        jr      $ra
